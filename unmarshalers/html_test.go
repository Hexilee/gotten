package unmarshalers

import (
	"encoding/json"
	"errors"
	"github.com/stretchr/testify/assert"
	"io/ioutil"
	"reflect"
	"testing"
)

const (
	CoursesJSON = `[{"code":{"text":"\n\t\t061B0020复变函数与积分变换王伟秋周一第1,2节周四第1,2节紫金港西2-205(多)紫金港西2-205(多)2018-06-13 14:48:521\n\t","href":"\n\t\t061B0020复变函数与积分变换王伟秋周一第1,2节周四第1,2节紫金港西2-205(多)紫金港西2-205(多)2018-06-13 14:48:521\n\t"},"name":{"text":"\n\t\t061B0020复变函数与积分变换王伟秋周一第1,2节周四第1,2节紫金港西2-205(多)紫金港西2-205(多)2018-06-13 14:48:521\n\t","href":"\n\t\t061B0020复变函数与积分变换王伟秋周一第1,2节周四第1,2节紫金港西2-205(多)紫金港西2-205(多)2018-06-13 14:48:521\n\t"},"teacher":{"text":"\n\t\t061B0020复变函数与积分变换王伟秋周一第1,2节周四第1,2节紫金港西2-205(多)紫金港西2-205(多)2018-06-13 14:48:521\n\t","href":"\n\t\t061B0020复变函数与积分变换王伟秋周一第1,2节周四第1,2节紫金港西2-205(多)紫金港西2-205(多)2018-06-13 14:48:521\n\t"},"semester":"\n\t\t061B0020复变函数与积分变换王伟秋周一第1,2节周四第1,2节紫金港西2-205(多)紫金港西2-205(多)2018-06-13 14:48:521\n\t","time":"\n\t\t061B0020复变函数与积分变换王伟秋周一第1,2节周四第1,2节紫金港西2-205(多)紫金港西2-205(多)2018-06-13 14:48:521\n\t","location":"\n\t\t061B0020复变函数与积分变换王伟秋周一第1,2节周四第1,2节紫金港西2-205(多)紫金港西2-205(多)2018-06-13 14:48:521\n\t"},{"code":{"text":"\n\t\t101C0350电路与模拟电子技术孙盾秋冬周二第6,7节周二第8节{单周}周五第3,4,5节紫金港西1-417(多)紫金港西1-417(多)紫金港西1-417(多)2018-06-13 14:49:351\n\t","href":"\n\t\t101C0350电路与模拟电子技术孙盾秋冬周二第6,7节周二第8节{单周}周五第3,4,5节紫金港西1-417(多)紫金港西1-417(多)紫金港西1-417(多)2018-06-13 14:49:351\n\t"},"name":{"text":"\n\t\t101C0350电路与模拟电子技术孙盾秋冬周二第6,7节周二第8节{单周}周五第3,4,5节紫金港西1-417(多)紫金港西1-417(多)紫金港西1-417(多)2018-06-13 14:49:351\n\t","href":"\n\t\t101C0350电路与模拟电子技术孙盾秋冬周二第6,7节周二第8节{单周}周五第3,4,5节紫金港西1-417(多)紫金港西1-417(多)紫金港西1-417(多)2018-06-13 14:49:351\n\t"},"teacher":{"text":"\n\t\t101C0350电路与模拟电子技术孙盾秋冬周二第6,7节周二第8节{单周}周五第3,4,5节紫金港西1-417(多)紫金港西1-417(多)紫金港西1-417(多)2018-06-13 14:49:351\n\t","href":"\n\t\t101C0350电路与模拟电子技术孙盾秋冬周二第6,7节周二第8节{单周}周五第3,4,5节紫金港西1-417(多)紫金港西1-417(多)紫金港西1-417(多)2018-06-13 14:49:351\n\t"},"semester":"\n\t\t101C0350电路与模拟电子技术孙盾秋冬周二第6,7节周二第8节{单周}周五第3,4,5节紫金港西1-417(多)紫金港西1-417(多)紫金港西1-417(多)2018-06-13 14:49:351\n\t","time":"\n\t\t101C0350电路与模拟电子技术孙盾秋冬周二第6,7节周二第8节{单周}周五第3,4,5节紫金港西1-417(多)紫金港西1-417(多)紫金港西1-417(多)2018-06-13 14:49:351\n\t","location":"\n\t\t101C0350电路与模拟电子技术孙盾秋冬周二第6,7节周二第8节{单周}周五第3,4,5节紫金港西1-417(多)紫金港西1-417(多)紫金港西1-417(多)2018-06-13 14:49:351\n\t"},{"code":{"text":"\n\t\t101C0360电路与模拟电子技术实验干于秋冬周四第3,4,5节紫金港东3-2022018-06-13 14:52:001\n\t","href":"\n\t\t101C0360电路与模拟电子技术实验干于秋冬周四第3,4,5节紫金港东3-2022018-06-13 14:52:001\n\t"},"name":{"text":"\n\t\t101C0360电路与模拟电子技术实验干于秋冬周四第3,4,5节紫金港东3-2022018-06-13 14:52:001\n\t","href":"\n\t\t101C0360电路与模拟电子技术实验干于秋冬周四第3,4,5节紫金港东3-2022018-06-13 14:52:001\n\t"},"teacher":{"text":"\n\t\t101C0360电路与模拟电子技术实验干于秋冬周四第3,4,5节紫金港东3-2022018-06-13 14:52:001\n\t","href":"\n\t\t101C0360电路与模拟电子技术实验干于秋冬周四第3,4,5节紫金港东3-2022018-06-13 14:52:001\n\t"},"semester":"\n\t\t101C0360电路与模拟电子技术实验干于秋冬周四第3,4,5节紫金港东3-2022018-06-13 14:52:001\n\t","time":"\n\t\t101C0360电路与模拟电子技术实验干于秋冬周四第3,4,5节紫金港东3-2022018-06-13 14:52:001\n\t","location":"\n\t\t101C0360电路与模拟电子技术实验干于秋冬周四第3,4,5节紫金港东3-2022018-06-13 14:52:001\n\t"},{"code":{"text":"\n\t\t241L0020博弈论基础蒋文华冬周三第6,7,8节紫金港西1-316(多)*2018-06-13 15:19:081\n\t","href":"\n\t\t241L0020博弈论基础蒋文华冬周三第6,7,8节紫金港西1-316(多)*2018-06-13 15:19:081\n\t"},"name":{"text":"\n\t\t241L0020博弈论基础蒋文华冬周三第6,7,8节紫金港西1-316(多)*2018-06-13 15:19:081\n\t","href":"\n\t\t241L0020博弈论基础蒋文华冬周三第6,7,8节紫金港西1-316(多)*2018-06-13 15:19:081\n\t"},"teacher":{"text":"\n\t\t241L0020博弈论基础蒋文华冬周三第6,7,8节紫金港西1-316(多)*2018-06-13 15:19:081\n\t","href":"\n\t\t241L0020博弈论基础蒋文华冬周三第6,7,8节紫金港西1-316(多)*2018-06-13 15:19:081\n\t"},"semester":"\n\t\t241L0020博弈论基础蒋文华冬周三第6,7,8节紫金港西1-316(多)*2018-06-13 15:19:081\n\t","time":"\n\t\t241L0020博弈论基础蒋文华冬周三第6,7,8节紫金港西1-316(多)*2018-06-13 15:19:081\n\t","location":"\n\t\t241L0020博弈论基础蒋文华冬周三第6,7,8节紫金港西1-316(多)*2018-06-13 15:19:081\n\t"},{"code":{"text":"\n\t\t261C0070工程力学吴禹季葆华秋冬周二第1,2节{单周}周四第6,7节周四第8节{双周}紫金港西1-404(多)紫金港西1-404(多)紫金港西1-404(多)2018-06-13 14:55:191\n\t","href":"\n\t\t261C0070工程力学吴禹季葆华秋冬周二第1,2节{单周}周四第6,7节周四第8节{双周}紫金港西1-404(多)紫金港西1-404(多)紫金港西1-404(多)2018-06-13 14:55:191\n\t"},"name":{"text":"\n\t\t261C0070工程力学吴禹季葆华秋冬周二第1,2节{单周}周四第6,7节周四第8节{双周}紫金港西1-404(多)紫金港西1-404(多)紫金港西1-404(多)2018-06-13 14:55:191\n\t","href":"\n\t\t261C0070工程力学吴禹季葆华秋冬周二第1,2节{单周}周四第6,7节周四第8节{双周}紫金港西1-404(多)紫金港西1-404(多)紫金港西1-404(多)2018-06-13 14:55:191\n\t"},"teacher":{"text":"\n\t\t261C0070工程力学吴禹季葆华秋冬周二第1,2节{单周}周四第6,7节周四第8节{双周}紫金港西1-404(多)紫金港西1-404(多)紫金港西1-404(多)2018-06-13 14:55:191\n\t","href":"\n\t\t261C0070工程力学吴禹季葆华秋冬周二第1,2节{单周}周四第6,7节周四第8节{双周}紫金港西1-404(多)紫金港西1-404(多)紫金港西1-404(多)2018-06-13 14:55:191\n\t"},"semester":"\n\t\t261C0070工程力学吴禹季葆华秋冬周二第1,2节{单周}周四第6,7节周四第8节{双周}紫金港西1-404(多)紫金港西1-404(多)紫金港西1-404(多)2018-06-13 14:55:191\n\t","time":"\n\t\t261C0070工程力学吴禹季葆华秋冬周二第1,2节{单周}周四第6,7节周四第8节{双周}紫金港西1-404(多)紫金港西1-404(多)紫金港西1-404(多)2018-06-13 14:55:191\n\t","location":"\n\t\t261C0070工程力学吴禹季葆华秋冬周二第1,2节{单周}周四第6,7节周四第8节{双周}紫金港西1-404(多)紫金港西1-404(多)紫金港西1-404(多)2018-06-13 14:55:191\n\t"},{"code":{"text":"\n\t\t74188020专业实习陈家旺黄豪彩短  2018-06-13 20:07:341\n\t","href":"\n\t\t74188020专业实习陈家旺黄豪彩短  2018-06-13 20:07:341\n\t"},"name":{"text":"\n\t\t74188020专业实习陈家旺黄豪彩短  2018-06-13 20:07:341\n\t","href":"\n\t\t74188020专业实习陈家旺黄豪彩短  2018-06-13 20:07:341\n\t"},"teacher":{"text":"\n\t\t74188020专业实习陈家旺黄豪彩短  2018-06-13 20:07:341\n\t","href":"\n\t\t74188020专业实习陈家旺黄豪彩短  2018-06-13 20:07:341\n\t"},"semester":"\n\t\t74188020专业实习陈家旺黄豪彩短  2018-06-13 20:07:341\n\t","time":"\n\t\t74188020专业实习陈家旺黄豪彩短  2018-06-13 20:07:341\n\t","location":"\n\t\t74188020专业实习陈家旺黄豪彩短  2018-06-13 20:07:341\n\t"},{"code":{"text":"\n\t\t761T0010大学物理（甲）Ⅰ潘国卫秋冬周六第6,7,8,9节紫金港西2-101(多)2018-09-14 13:03:151\n\t","href":"\n\t\t761T0010大学物理（甲）Ⅰ潘国卫秋冬周六第6,7,8,9节紫金港西2-101(多)2018-09-14 13:03:151\n\t"},"name":{"text":"\n\t\t761T0010大学物理（甲）Ⅰ潘国卫秋冬周六第6,7,8,9节紫金港西2-101(多)2018-09-14 13:03:151\n\t","href":"\n\t\t761T0010大学物理（甲）Ⅰ潘国卫秋冬周六第6,7,8,9节紫金港西2-101(多)2018-09-14 13:03:151\n\t"},"teacher":{"text":"\n\t\t761T0010大学物理（甲）Ⅰ潘国卫秋冬周六第6,7,8,9节紫金港西2-101(多)2018-09-14 13:03:151\n\t","href":"\n\t\t761T0010大学物理（甲）Ⅰ潘国卫秋冬周六第6,7,8,9节紫金港西2-101(多)2018-09-14 13:03:151\n\t"},"semester":"\n\t\t761T0010大学物理（甲）Ⅰ潘国卫秋冬周六第6,7,8,9节紫金港西2-101(多)2018-09-14 13:03:151\n\t","time":"\n\t\t761T0010大学物理（甲）Ⅰ潘国卫秋冬周六第6,7,8,9节紫金港西2-101(多)2018-09-14 13:03:151\n\t","location":"\n\t\t761T0010大学物理（甲）Ⅰ潘国卫秋冬周六第6,7,8,9节紫金港西2-101(多)2018-09-14 13:03:151\n\t"},{"code":{"text":"\n\t\t761T0020大学物理（甲）Ⅱ郑大方秋冬周一第3,4节周三第1,2节紫金港西2-202(多)#2018-06-13 14:43:031\n\t","href":"\n\t\t761T0020大学物理（甲）Ⅱ郑大方秋冬周一第3,4节周三第1,2节紫金港西2-202(多)#2018-06-13 14:43:031\n\t"},"name":{"text":"\n\t\t761T0020大学物理（甲）Ⅱ郑大方秋冬周一第3,4节周三第1,2节紫金港西2-202(多)#2018-06-13 14:43:031\n\t","href":"\n\t\t761T0020大学物理（甲）Ⅱ郑大方秋冬周一第3,4节周三第1,2节紫金港西2-202(多)#2018-06-13 14:43:031\n\t"},"teacher":{"text":"\n\t\t761T0020大学物理（甲）Ⅱ郑大方秋冬周一第3,4节周三第1,2节紫金港西2-202(多)#2018-06-13 14:43:031\n\t","href":"\n\t\t761T0020大学物理（甲）Ⅱ郑大方秋冬周一第3,4节周三第1,2节紫金港西2-202(多)#2018-06-13 14:43:031\n\t"},"semester":"\n\t\t761T0020大学物理（甲）Ⅱ郑大方秋冬周一第3,4节周三第1,2节紫金港西2-202(多)#2018-06-13 14:43:031\n\t","time":"\n\t\t761T0020大学物理（甲）Ⅱ郑大方秋冬周一第3,4节周三第1,2节紫金港西2-202(多)#2018-06-13 14:43:031\n\t","location":"\n\t\t761T0020大学物理（甲）Ⅱ郑大方秋冬周一第3,4节周三第1,2节紫金港西2-202(多)#2018-06-13 14:43:031\n\t"},{"code":{"text":"\n\t\t821T0020微积分（甲）Ⅱ薛儒英秋冬周六第1,2,3,4节{单周}周六第1,2,3,4,5节{双周}紫金港西2-105(多)2018-09-14 13:01:471\n\t","href":"\n\t\t821T0020微积分（甲）Ⅱ薛儒英秋冬周六第1,2,3,4节{单周}周六第1,2,3,4,5节{双周}紫金港西2-105(多)2018-09-14 13:01:471\n\t"},"name":{"text":"\n\t\t821T0020微积分（甲）Ⅱ薛儒英秋冬周六第1,2,3,4节{单周}周六第1,2,3,4,5节{双周}紫金港西2-105(多)2018-09-14 13:01:471\n\t","href":"\n\t\t821T0020微积分（甲）Ⅱ薛儒英秋冬周六第1,2,3,4节{单周}周六第1,2,3,4,5节{双周}紫金港西2-105(多)2018-09-14 13:01:471\n\t"},"teacher":{"text":"\n\t\t821T0020微积分（甲）Ⅱ薛儒英秋冬周六第1,2,3,4节{单周}周六第1,2,3,4,5节{双周}紫金港西2-105(多)2018-09-14 13:01:471\n\t","href":"\n\t\t821T0020微积分（甲）Ⅱ薛儒英秋冬周六第1,2,3,4节{单周}周六第1,2,3,4,5节{双周}紫金港西2-105(多)2018-09-14 13:01:471\n\t"},"semester":"\n\t\t821T0020微积分（甲）Ⅱ薛儒英秋冬周六第1,2,3,4节{单周}周六第1,2,3,4,5节{双周}紫金港西2-105(多)2018-09-14 13:01:471\n\t","time":"\n\t\t821T0020微积分（甲）Ⅱ薛儒英秋冬周六第1,2,3,4节{单周}周六第1,2,3,4,5节{双周}紫金港西2-105(多)2018-09-14 13:01:471\n\t","location":"\n\t\t821T0020微积分（甲）Ⅱ薛儒英秋冬周六第1,2,3,4节{单周}周六第1,2,3,4,5节{双周}紫金港西2-105(多)2018-09-14 13:01:471\n\t"}]`
)

var (
	htmlTestStruct = HtmlTestStruct{
		Interface: 0,
		Chan:      make(chan int, 0),
		Func: func() {

		},
		Map: make(map[string]string),
	}

	InterfaceAddr = reflect.ValueOf(&htmlTestStruct).Elem().FieldByName("Interface").Addr().Interface()
	ChanAddr      = reflect.ValueOf(&htmlTestStruct).Elem().FieldByName("Chan").Addr().Interface()
	FuncAddr      = reflect.ValueOf(&htmlTestStruct).Elem().FieldByName("Func").Addr().Interface()
	MapAddr       = reflect.ValueOf(&htmlTestStruct).Elem().FieldByName("Map").Addr().Interface()
)

type (
	HtmlTestStruct struct {
		Interface interface{}
		Chan      chan int
		Func      func()
		Map       map[string]string
	}

	Link struct {
		Text string `json:"text";key:"text"`
		Href string `json:"href";key:"href"`
	}

	Course struct {
		Code     Link   `json:"code";html:"td:nth-child(1) > a"`
		Name     Link   `json:"name";html:"td:nth-child(2) > a"`
		Teacher  Link   `json:"teacher";html:"td:nth-child(3) > a"`
		Semester string `json:"semester";html:"td:nth-child(4)";key:"text"`
		Time     string `json:"time";html:"td:nth-child(5)";key:"text"`
		Location string `json:"location";html:"td:nth-child(6)";key:"text"`
	}

	Courses []Course
)

func (courses Courses) Root() string {
	return "#xsgrid > tbody > tr:nth-child(1n+2)"
}

func TestHTMLMarshaler_parseType(t *testing.T) {
	var (
		Int      = 0
		IntPtr   = &Int
		IntSlice = make([]int, 0)
	)

	for _, testCase := range [] *struct {
		dto      interface{}
		kind     reflect.Kind
		itemType reflect.Type
		err      error
	}{
		{&IntSlice, reflect.Slice, reflect.TypeOf(IntSlice), nil},
		{Int, 0, nil, errors.New(UnmarshaledKindMustBePtr)},
		{IntPtr, reflect.Int, reflect.TypeOf(Int), nil},
		{&IntPtr, reflect.Ptr, reflect.TypeOf(IntPtr), errors.New(UnmarshalerItemKindError)},
		{InterfaceAddr, reflect.Interface, reflect.TypeOf(InterfaceAddr).Elem(), errors.New(UnmarshalerItemKindError)},
		{ChanAddr, reflect.Chan, reflect.TypeOf(ChanAddr).Elem(), errors.New(UnmarshalerItemKindError)},
		{FuncAddr, reflect.Func, reflect.TypeOf(FuncAddr).Elem(), errors.New(UnmarshalerItemKindError)},
		{MapAddr, reflect.Map, reflect.TypeOf(MapAddr).Elem(), errors.New(UnmarshalerItemKindError)},
	} {
		func() {
			result := new(HTMLUnmarshaler)
			parseErr := result.initDto(reflect.ValueOf(testCase.dto))
			if parseErr != nil && testCase.err != nil {
				assert.Equal(t, testCase.err.Error(), parseErr.Error())
			} else {
				assert.Equal(t, testCase.err, parseErr)
			}
			assert.Equal(t, testCase.kind, result.kind)
			assert.Equal(t, testCase.itemType, result.dtoElemType)
		}()
	}
}

func TestHTMLUnmarshaler_Unmarshal(t *testing.T) {
	TestHTML, err := ioutil.ReadFile("testFiles/courses.html")
	assert.Nil(t, err)
	courses := make(Courses, 0)
	assert.Nil(t, new(HTMLUnmarshaler).Unmarshal(TestHTML, &courses))
	result, err := json.Marshal(courses)
	assert.Nil(t, err)
	assert.Equal(t, CoursesJSON, string(result))
}
